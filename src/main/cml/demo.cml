Domain ArtificialIntelligenceForMedicalImages {
  domainVisionStatement = ""

  Subdomain DataPartnership {
    type = GENERIC_SUBDOMAIN
    domainVisionStatement = "Data integration, Data ingestion, Data Transformation, Data storage"
  } 

  Subdomain DataProcessing {
    type = GENERIC_SUBDOMAIN
    domainVisionStatement = "Data Analysis, Data Processing, Images Anonymization, Images processing, Mapping, Data Validation, Data Verification"
  }

  Subdomain APIPlatformDevelopment {
    type = CORE_DOMAIN
    domainVisionStatement = "Software Engineering, Integration, Technologiest, Monitoring, Software Relability Engineering, Software Quality, Payment Gateway, API, Web Services, Cloud Computing"
  }   

  Subdomain AIModelDevelopment {
    type = GENERIC_SUBDOMAIN
    domainVisionStatement = "Machine learning, Deep learning, Neural Networks, Computer Vision, Image Processing, Image Recognition, Image Classification, Image Segmentation, Image Detection, Image Analysis"
  }

  Subdomain DataPrivacyAndSecurity {
    type = CORE_DOMAIN
    domainVisionStatement = "Data processing, Informatic Security, Data Security, Data Privacy, Data Protection"
  }

  Subdomain Sales {
    type = SUPPORTING_DOMAIN
    domainVisionStatement = "Sales, Customers, Vendors, Partners, Business Development, Marketing, Customer Relationship Management, Customer Service"
  }
}


BoundedContext DataIngestionContext implements DataPartnership {

}

BoundedContext DataProcessingContext implements DataPartnership, DataProcessing, DataProcessing {

}

BoundedContext CustomerFacingContext implements APIPlatformDevelopment {

}

BoundedContext DataSecurityAndPrivacyContext implements DataPrivacyAndSecurity {

}

BoundedContext ScalabilityAndInfrastructureContext implements ScalabilityAndInfrastructure {

}

BoundedContext AIModelDevelopmentContext implements AIModelDevelopment {

}

BoundedContext CustomerAndRelationshipManagementContext implements APIPlatformDevelopment {

}

BoundedContext InvestigationAndDevelopmentContext implements APIPlatformDevelopment {

}

BoundedContext DataIngestionAndCanonizationContext implements APIPlatformDevelopment {

}

BoundedContext DataProcessingContext implements DataProcessing {

}


ContextMap PropiedadesDeSaludTech {
	state = AS_IS

	contains DataIngestionContext
	contains DataProcessingContext
	contains CustomerFacingContext
  contains DataSecurityAndPrivacyContext
  contains ScalabilityAndInfrastructureContext
  contains AIModelDevelopmentContext
  contains CustomerAndRelationshipManagementContext
  contains InvestigationAndDevelopmentContext
  contains DataIngestionAndCanonizationContext
  contains DataProcessingContext
	
	/* 
	 * Tenga en cuenta que dado como el sistema se encuentra se puede asumir un Shared Kernel
	 * pero si usted pensó en otro tipo de relación es totalmente ví¡lido
	 */
	DataIngestionAndCanonizationContext [SK]<->[SK] DataProcessingContext

	DataProcessingContext [D] <- [U] CustomerFacingContext

	CustomerFacingContext [D] <- [U] DataIngestionAndCanonizationContext

}
